目标：
引入对象、事件、变量支持
优化函数、循环、判断支持
对数字类型提供更直接的（混合）四则操作。对整数提供取余
保留mcfunction的主导作用。

代码结构：
语句块 - 语句
用 {} 包裹多个语句构成语句块
一行只能有一个语句
元素间以空格区分

作用域：
函数作用域

导包：再说

if / for / while 支持

事件支持
event <name> from <source>
从预定义的事件准则中导入

基本数据：
不包括JSON和SNBT
提供相关工具。

对象分为：
抽象对象 - 用户定义
实体对象 - 基于minecraft
方块对象
...
对象支持添加属性（变量），可能支持静态变量
支持定义方法

传参：
数值参 - 基本数据
引用参 - 对象

对于函数支持：
用以下格式定义：
def <event> <name>() {}
内置event -> new  &  func
分别标识新建对象事件和手动调用事件
括号内填写变量名表示从传入参数中声明哪些同名变量
保留self自身表示实例自身

变量嵌入方法： {% expression %}
macro <var name> 宏嵌入
score_o <var name> 嵌入记分板名
score_s <var name> 嵌入记分板追踪项名
data <var name> 嵌入储存路径
func <function name> 嵌入函数路径
object <object name> 嵌入实例的SNBT

支持原mcf。
